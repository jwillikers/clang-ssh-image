---
name: CI
on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    # Run at 04:10 on Sunday
    - cron: "10 4 * * 0"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - amd64
          - arm64
    steps:
      - name: Install the fish shell
        uses: fish-actions/install-fish@v1.1.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Configure Podman and Buildah to use FUSE
        run: |
          sudo apt-get install fuse-overlayfs
          mkdir -vp ~/.config/containers
          printf '[storage]\ndriver="overlay"\n\n[storage.options]\nmount_program="/usr/bin/fuse-overlayfs"\n' > ~/.config/containers/storage.conf

      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Build the image with Buildah
        run: buildah unshare ./build.fish --architecture ${{ matrix.arch }} --name clang-ssh-${{ matrix.arch }}

      - name: Export the image
        run: podman image save --format oci-archive -o clang-ssh-${{ matrix.arch }}.tar localhost/clang-ssh-${{ matrix.arch }}

      - uses: actions/upload-artifact@v2
        with:
          name: clang-ssh-${{ matrix.arch }}
          path: clang-ssh-${{ matrix.arch }}.tar

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        arch:
          - amd64
          - arm64
    steps:
      - name: Install the fish shell
        uses: fish-actions/install-fish@v1.1.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Check out the repository
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: clang-ssh-${{ matrix.arch }}

      - name: Load the image
        run: podman image load -i clang-ssh-${{ matrix.arch }}.tar

      - name: Test the container
        run: ./test.fish --name clang-ssh-${{ matrix.arch }}

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Create a manifest
        run: buildah manifest create clang-ssh:latest

      # aarch64
      - uses: actions/download-artifact@v2
        with:
          name: clang-ssh-arm64

      - name: Load the aarch64 image
        run: podman image load -i clang-ssh-arm64.tar

      - name: Add the aarch64 image to the manifest
        run: buildah manifest add clang-ssh:latest localhost/clang-ssh-arm64

      # x86_64
      - uses: actions/download-artifact@v2
        with:
          name: clang-ssh-amd64

      - name: Load the x86_64 image
        run: podman image load -i clang-ssh-amd64.tar

      - name: Add the x86_64 image to the manifest
        run: buildah manifest add clang-ssh:latest localhost/clang-ssh-amd64

      - name: Push latest manifest and images to quay.io
        run: buildah manifest push --rm --all --creds jwillikers+publisher:${{ secrets.REGISTRY_PASSWORD }} clang-ssh:latest docker://quay.io/jwillikers/clang-ssh
